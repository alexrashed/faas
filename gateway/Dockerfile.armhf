FROM alpine:3.9 as qemu_extract
COPY --from=multiarch/qemu-user-static:x86_64-arm /usr/bin qemu_user_static.tgz
RUN tar -xzvf qemu_user_static.tgz

FROM arm32v7/golang:1.11-alpine as golang
COPY --from=qemu_extract qemu-* /usr/bin
WORKDIR /go/src/github.com/openfaas/faas/gateway

COPY vendor         vendor

COPY handlers       handlers
COPY metrics        metrics
COPY requests       requests
COPY tests          tests

COPY types          types
COPY queue          queue
COPY plugin         plugin
COPY version        version
COPY scaling        scaling
COPY server.go      .

RUN CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -a -installsuffix cgo -o gateway .

FROM arm32v7/alpine:3.9
COPY --from=qemu_extract qemu-* /usr/bin

LABEL org.label-schema.license="MIT" \
    org.label-schema.vcs-url="https://github.com/openfaas/faas" \
    org.label-schema.vcs-type="Git" \
    org.label-schema.name="openfaas/faas" \
    org.label-schema.vendor="openfaas" \
    org.label-schema.docker.schema-version="1.0"

RUN addgroup -S app \
    && adduser -S -g app app

WORKDIR /home/app

EXPOSE 8080
ENV http_proxy      ""
ENV https_proxy     ""

COPY --from=golang /go/src/github.com/openfaas/faas/gateway/gateway    .

COPY assets     assets
RUN sed -ie s/store.json/store-armhf.json/g /home/app/assets/script/funcstore.js
RUN chown -R app:app ./
USER app

CMD ["./gateway"]
